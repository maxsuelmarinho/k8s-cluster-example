---
- name: kube master ip
  debug:
    msg: "ip: {{ ansible_default_ipv4.address }}"

- name: verify connectivity to gcr.io registries
  command: kubeadm config images pull
  register: kubeadm_config_images_pull

- debug: var=kubeadm_config_images_pull.stdout_lines

- name: check kubeadm is already initialized 1/2
  command: "kubeadm init --dry-run --apiserver-advertise-address={{ apiserver_advertise_address }} --pod-network-cidr={{ pod_network_cidr }}"
  register: kubeadm_check_1
  ignore_errors: True

- debug: var=kubeadm_check_1.stdout_lines

- name: check kubeadm is already initialized 2/2
  command: "kubeadm token list"
  register: kubeadm_check_2
  ignore_errors: True

- debug: var=kubeadm_check_2.stdout_lines

- name: clean up cluster state
  include_role:
    name: tear-down
  when: kubeadm_check_1.rc != 0 and kubeadm_check_2.rc != 0

- name: initialise master node
  command: "kubeadm init --apiserver-advertise-address={{ apiserver_advertise_address }} --pod-network-cidr={{ pod_network_cidr }}"
  register: kubeadm_init_output
  when: kubeadm_check_1.rc == 0

- debug: var=kubeadm_init_output.stdout_lines

- name: create .kube directory
  become: no
  file:
    path: "/home/vagrant/.kube"
    state: directory
    owner: vagrant
    group: vagrant
  register: kube_dir

- name: copy kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: '{{ kube_dir.path }}/config'
    remote_src: yes
    owner: vagrant
    group: vagrant

- name: create .kube directory for root user
  become: yes
  file:
    path: "/root/.kube"
    state: directory
    owner: root
    group: root
  register: root_kube_dir

- name: copy kube config for root user
  become: yes
  copy:
    src: /etc/kubernetes/admin.conf
    dest: '{{ root_kube_dir.path }}/config'
    remote_src: yes
    owner: root
    group: root

- name: deploy pod network
  become: no
  command: kubectl apply -f {{ item }}
  loop:
    - https://docs.projectcalico.org/v3.8/manifests/calico.yaml
  
- name: list tokens
  command: kubeadm token list
  register: kubeadm_token_list

- debug: var=kubeadm_token_list.stdout_lines

- name: token ca cert hash
  shell: "openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'"
  register: token_ca_cert_hash_output

- debug: var=token_ca_cert_hash_output.stdout_lines

- stat:
    path: /vagrant/join-command.sh
  register: join_command

- name: saving token for worker nodes
  shell: "kubeadm token create --print-join-command >> /vagrant/join-command.sh"
  when: join_command.stat.isFile is undefined
